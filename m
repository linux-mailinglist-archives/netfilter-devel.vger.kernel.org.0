Return-Path: <netfilter-devel+bounces-9196-lists+netfilter-devel=lfdr.de@vger.kernel.org>
X-Original-To: lists+netfilter-devel@lfdr.de
Delivered-To: lists+netfilter-devel@lfdr.de
Received: from dfw.mirrors.kernel.org (dfw.mirrors.kernel.org [IPv6:2605:f480:58:1:0:1994:3:14])
	by mail.lfdr.de (Postfix) with ESMTPS id 640B8BDA755
	for <lists+netfilter-devel@lfdr.de>; Tue, 14 Oct 2025 17:44:35 +0200 (CEST)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by dfw.mirrors.kernel.org (Postfix) with ESMTPS id 7E8A1505E68
	for <lists+netfilter-devel@lfdr.de>; Tue, 14 Oct 2025 15:32:01 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id CC4E430276F;
	Tue, 14 Oct 2025 15:29:17 +0000 (UTC)
X-Original-To: netfilter-devel@vger.kernel.org
Received: from Chamillionaire.breakpoint.cc (Chamillionaire.breakpoint.cc [91.216.245.30])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 15B7D2F0C49
	for <netfilter-devel@vger.kernel.org>; Tue, 14 Oct 2025 15:29:13 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=91.216.245.30
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760455757; cv=none; b=XFUb/345z5zmermsSnJTiCo3JlQRKKvR6qWpdKmsWHrTXTb57zCPnfxrtdBd734ZNcTjFcamlUaxTPXeMJaFhzGXe7Bda4/PjmBi3NhD7fIesFtfM8OPp3lRVcjskUKmZUrT8BS8Xdn5hVAAPZWBWaQ1kBQjZN5iwGH15uZtdMw=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760455757; c=relaxed/simple;
	bh=bx7WtxQ1IuuZSt2CYxCibeUrjNkdfo1IeCtCCqgVX30=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=MuEG78bsaf3qieaWSw/KDW0XYEMd1KgTK9JypYZZ5zEOqJsrHd5asLaMy8SM6q2UiXgNg2+65grEdX4a09Z5Qq4iFjhYU1tAr3qZRL/L1PsX6iJzVLcrDQJGpeBN2mHR/nGjT4/mcwabX+lIHysjsLTXrdfZxdMlHnR4Q4kcVHU=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=strlen.de; spf=pass smtp.mailfrom=strlen.de; arc=none smtp.client-ip=91.216.245.30
Authentication-Results: smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=strlen.de
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=strlen.de
Received: by Chamillionaire.breakpoint.cc (Postfix, from userid 1003)
	id C4B45603CA; Tue, 14 Oct 2025 17:29:11 +0200 (CEST)
Date: Tue, 14 Oct 2025 17:29:11 +0200
From: Florian Westphal <fw@strlen.de>
To: Fernando Fernandez Mancera <fmancera@suse.de>
Cc: "Remy D. Farley" <one-d-wide@protonmail.com>,
	"netfilter-devel@vger.kernel.org" <netfilter-devel@vger.kernel.org>
Subject: Re: iptables: zero dereference parsing bitwise operations
Message-ID: <aO5sR82R-XqueUq-@strlen.de>
References: <s5LZtLzqFmQhlD4mtmgcKbrgkfQ-X7k7vvg7s7XnXHekGJSKOMyOdmoiONo7MzuLVqYTFPntt74igf8Q0ERSPy5R9f8L1EfwrhOZbs_nhO8=@protonmail.com>
 <aOpigXfhOrj02Qa5@strlen.de>
 <e2mf5Q5IBD50dFQcvIXCNkQCKwghz-hLmCunP33gaZy33srxWrQKdcL1J3GKA8a0H05T6p4kZGFpR910g7JBZusbg_AmEZKPD1UvW_mEheQ=@protonmail.com>
 <dae7551c-c18e-46ea-b490-1b7310a40195@suse.de>
 <c0jUt9xXxfO6o8KmFHUCZKJYW1bArw2X3KSLyVn39yv9-LiFW46XF0vnsPVV-QXkempUYu7kwzNsmG9rHM-65QjnqZ-mdz94Es2EPKbjbHI=@protonmail.com>
 <e914fab4-e65d-43d3-a99d-816e8dffd72b@suse.de>
Precedence: bulk
X-Mailing-List: netfilter-devel@vger.kernel.org
List-Id: <netfilter-devel.vger.kernel.org>
List-Subscribe: <mailto:netfilter-devel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:netfilter-devel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <e914fab4-e65d-43d3-a99d-816e8dffd72b@suse.de>

Fernando Fernandez Mancera <fmancera@suse.de> wrote:
> > 
> >> Hi Remy, could you share the full output of:
> >>
> >> 'nft --debug=netlink list ruleset'
> >>
> >> This will allow me to understand what is the generated bytecode and an
> >> easy way to reproduce this with libnftnl. I am happy to investigate/fix
> >> this on the nft/libnftnl/kernel side :)
> > 
> > 
> > Hi Fernando,
> > 
> > Not sure if it worth investigating, but here you go.
> > 
> > 
> 
> I have reproduced this and confirmed that the right source register is 
> being set (NFT_REG_1) and that libnftnl is reporting it correctly. The 
> problem is on nft command line tool side.. I do not think it is worth 
> going deeper as it is probably related to nftables not being able to 
> delinearize this rule as it is not supported by nft itself.

What the rule is doing is supported, but nft will transform it to use
xor/and, as that will work on all nf_tables versions rather than only
kernels that support NFT_BITWISE_OR.

I think it would be possible to extend netlink_delinerize.c to support
it but its technically not needed.

nft can also not be expected to ever be able to make sense of a ruleset
generated by something else, there is just too much variance to always
be able to map this back to nft grammar.

